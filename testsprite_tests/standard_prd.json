{
  "meta": {
    "project": "FitConnect - Personal Trainer Platform",
    "date": "2025-10-18",
    "prepared_by": "Generated by TestSprite"
  },
  "product_overview": "FitConnect is a full-stack, university project web application that connects personal trainers with clients featuring advanced booking options, simulated payment processing, session management, and analytics using a modern tech stack.",
  "core_goals": [
    "Enable secure user authentication with role-based access for clients, trainers, and admins.",
    "Provide comprehensive trainer profile management including specialties, pricing, and availability.",
    "Support a versatile booking system with direct bookings, booking requests, and AI-powered smart scheduling.",
    "Manage session lifecycle from booking to completion with status tracking.",
    "Simulate payment processing with validation, transaction history, and refunds.",
    "Facilitate seamless in-app messaging between clients and trainers.",
    "Allow trainers to create, assign, and track custom workout programs.",
    "Offer an interactive analytics dashboard for system insights and performance metrics."
  ],
  "key_features": [
    "JWT-based user authentication with client, trainer, and admin roles.",
    "Trainer profile creation with specialties, pricing, bio, and registration completion tracking.",
    "Three-tier booking system: direct booking, flexible requests, smart AI scheduling with optimal time suggestions.",
    "Granular time slot management with bulk creation and trainer-specific availability.",
    "Session management covering booking, approval, status changes, and history tracking.",
    "Simulated payment gateway with credit card validation and refund support.",
    "Real-time in-app messaging system with conversation and message status management.",
    "Custom workout program management for trainers with client progress tracking.",
    "Admin analytics dashboard providing session, user, and payment insights in real time."
  ],
  "user_flow_summary": [
    "User registers and logs in via JWT-based authentication with role-based access.",
    "Clients browse trainer profiles and available time slots to book sessions directly, via requests, or smart AI scheduling.",
    "Trainers manage profile details, availability, and approve or reject bookings.",
    "Payment is processed via simulated credit card forms upon booking confirmation.",
    "Users engage in in-app messaging for communication between clients and trainers.",
    "Trainers create and assign workout programs; clients track their progress.",
    "Admins view analytics and process refunds as needed."
  ],
  "validation_criteria": [
    "Successful registration and login with valid credentials and roles.",
    "Enforcement of token expiration and role-based access control.",
    "Complete booking lifecycle supports direct, request, and AI-suggested bookings with trainer approval flows.",
    "Simulated payment processing validates card numbers and records transactions accurately.",
    "Availability slots reflect accurate trainer schedules preventing double bookings.",
    "Messaging is delivered and tracked correctly between clients and trainers.",
    "Workout programs are assignable and progress is accurately tracked.",
    "Analytics dashboard displays real-time accurate reports on sessions, payments, and user activity."
  ],
  "code_summary": {
    "tech_stack": [
      "Python",
      "FastAPI",
      "MySQL",
      "SQLAlchemy",
      "JWT",
      "JavaScript",
      "TypeScript",
      "Next.js",
      "React",
      "Tailwind CSS",
      "Node.js",
      "Alembic",
      "Pydantic",
      "PassLib",
      "Python-Jose"
    ],
    "features": [
      {
        "name": "User Authentication System",
        "description": "JWT-based authentication with role-based access control for clients, trainers, and admins",
        "files": [
          "backend/app/routers/auth.py",
          "backend/app/utils/auth.py",
          "backend/app/schemas/auth.py",
          "frontend/src/contexts/AuthContext.tsx",
          "frontend/src/app/auth/signin/page.tsx",
          "frontend/src/app/auth/signup/page.tsx"
        ]
      },
      {
        "name": "Trainer Profile Management",
        "description": "Complete trainer profile setup with specialties, pricing, bio, and completion status tracking",
        "files": [
          "backend/app/routers/trainer_profile.py",
          "backend/app/routers/trainer_registration.py",
          "backend/app/schemas/trainer_profile.py",
          "frontend/src/app/trainer/profile/page.tsx",
          "frontend/src/app/trainer/complete-registration/page.tsx"
        ]
      },
      {
        "name": "Three-Tier Booking System",
        "description": "Direct booking, booking requests, and AI-powered smart scheduling with optimal time suggestions",
        "files": [
          "backend/app/routers/booking_management.py",
          "backend/app/routers/booking_requests.py",
          "backend/app/routers/bookings.py",
          "backend/app/services/booking_service.py",
          "frontend/src/app/direct-booking/page.tsx",
          "frontend/src/app/optimal-scheduling/page.tsx"
        ]
      },
      {
        "name": "Smart Scheduling Algorithm",
        "description": "AI-powered optimal scheduling with greedy algorithms for finding best trainer-client matches",
        "files": [
          "backend/app/routers/optimal_schedule.py",
          "backend/app/services/optimal_schedule_service.py",
          "backend/app/services/scoring_service.py",
          "backend/app/schemas/optimal_schedule.py",
          "frontend/src/app/optimal-scheduling/page.tsx"
        ]
      },
      {
        "name": "Time Slot Management",
        "description": "Granular availability tracking with bulk creation and trainer-specific time slot management",
        "files": [
          "backend/app/routers/time_slots.py",
          "backend/app/schemas/time_slots.py",
          "frontend/src/app/trainer/availability/page.tsx"
        ]
      },
      {
        "name": "Session Management",
        "description": "Complete session lifecycle tracking from booking to completion with status management",
        "files": [
          "backend/app/routers/sessions.py",
          "backend/app/schemas/session.py",
          "frontend/src/app/client/schedule/page.tsx",
          "frontend/src/app/trainer/schedule/page.tsx"
        ]
      },
      {
        "name": "Payment Processing System",
        "description": "Simulated payment processing with credit card validation, transaction tracking, and refund support",
        "files": [
          "backend/app/routers/payments.py",
          "backend/app/schemas/payment.py"
        ]
      },
      {
        "name": "Messaging System",
        "description": "In-app messaging between clients and trainers with conversation management and message status tracking",
        "files": [
          "backend/app/routers/messages.py",
          "backend/app/schemas/message.py",
          "frontend/src/app/client/messages/page.tsx",
          "frontend/src/app/trainer/messages/page.tsx"
        ]
      },
      {
        "name": "Workout Programs",
        "description": "Custom workout programs created by trainers with assignment and progress tracking capabilities",
        "files": [
          "backend/app/routers/programs.py",
          "backend/app/schemas/program.py"
        ]
      },
      {
        "name": "Analytics Dashboard",
        "description": "Comprehensive analytics for sessions, clients, trainers, and KPIs with real-time data",
        "files": [
          "backend/app/routers/analytics.py",
          "backend/app/services/analytics_service.py",
          "frontend/src/app/admin/page.tsx"
        ]
      }
    ]
  }
}
